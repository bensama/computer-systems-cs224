Dump of assembler code for function phase_6:
=> 0x000000000040123c <+0>:     push   %r13
   0x000000000040123e <+2>:     push   %r12
   0x0000000000401240 <+4>:     push   %rbp
   0x0000000000401241 <+5>:     push   %rbx
   0x0000000000401242 <+6>:     sub    $0x68,%rsp
   0x0000000000401246 <+10>:    mov    %fs:0x28,%rax
   0x000000000040124f <+19>:    mov    %rax,0x58(%rsp)
   0x0000000000401254 <+24>:    xor    %eax,%eax
   0x0000000000401256 <+26>:    mov    %rsp,%rsi
   0x0000000000401259 <+29>:    callq  0x401778 <read_six_numbers>
   0x000000000040125e <+34>:    mov    %rsp,%r12
   0x0000000000401261 <+37>:    mov    $0x0,%r13d
   0x0000000000401267 <+43>:    mov    %r12,%rbp
   0x000000000040126a <+46>:    mov    (%r12),%eax
   0x000000000040126e <+50>:    sub    $0x1,%eax
   0x0000000000401271 <+53>:    cmp    $0x5,%eax
   0x0000000000401274 <+56>:    jbe    0x40127b <phase_6+63>
   0x0000000000401276 <+58>:    callq  0x401742 <explode_bomb>
   0x000000000040127b <+63>:    add    $0x1,%r13d
   0x000000000040127f <+67>:    cmp    $0x6,%r13d
   0x0000000000401283 <+71>:    je     0x4012c2 <phase_6+134>
   0x0000000000401285 <+73>:    mov    %r13d,%ebx
   0x0000000000401288 <+76>:    movslq %ebx,%rax
   0x000000000040128b <+79>:    mov    (%rsp,%rax,4),%eax
   0x000000000040128e <+82>:    cmp    %eax,0x0(%rbp)
   0x0000000000401291 <+85>:    jne    0x401298 <phase_6+92>
   0x0000000000401293 <+87>:    callq  0x401742 <explode_bomb>
   0x0000000000401298 <+92>:    add    $0x1,%ebx
   0x000000000040129b <+95>:    cmp    $0x5,%ebx
   0x000000000040129e <+98>:    jle    0x401288 <phase_6+76>
   0x00000000004012a0 <+100>:   add    $0x4,%r12
   0x00000000004012a4 <+104>:   jmp    0x401267 <phase_6+43>
   0x00000000004012a6 <+106>:   mov    0x8(%rdx),%rdx
   0x00000000004012aa <+110>:   add    $0x1,%eax
   0x00000000004012ad <+113>:   cmp    %ecx,%eax
   0x00000000004012af <+115>:   jne    0x4012a6 <phase_6+106>
   0x00000000004012b1 <+117>:   mov    %rdx,0x20(%rsp,%rsi,2)
   0x00000000004012b6 <+122>:   add    $0x4,%rsi
   0x00000000004012ba <+126>:   cmp    $0x18,%rsi
   0x00000000004012be <+130>:   jne    0x4012c7 <phase_6+139>
   0x00000000004012c0 <+132>:   jmp    0x4012db <phase_6+159>
   0x00000000004012c2 <+134>:   mov    $0x0,%esi
   0x00000000004012c7 <+139>:   mov    (%rsp,%rsi,1),%ecx
   0x00000000004012ca <+142>:   mov    $0x1,%eax
   0x00000000004012cf <+147>:   mov    $0x6042f0,%edx
   0x00000000004012d4 <+152>:   cmp    $0x1,%ecx
   0x00000000004012d7 <+155>:   jg     0x4012a6 <phase_6+106>
   0x00000000004012d9 <+157>:   jmp    0x4012b1 <phase_6+117>
   0x00000000004012db <+159>:   mov    0x20(%rsp),%rbx
   0x00000000004012e0 <+164>:   lea    0x20(%rsp),%rax
   0x00000000004012e5 <+169>:   lea    0x48(%rsp),%rsi
   0x00000000004012ea <+174>:   mov    %rbx,%rcx
   0x00000000004012ed <+177>:   mov    0x8(%rax),%rdx
   0x00000000004012f1 <+181>:   mov    %rdx,0x8(%rcx)
   0x00000000004012f5 <+185>:   add    $0x8,%rax
   0x00000000004012f9 <+189>:   mov    %rdx,%rcx
   0x00000000004012fc <+192>:   cmp    %rsi,%rax
   0x00000000004012ff <+195>:   jne    0x4012ed <phase_6+177>
---Type <return> to continue, or q <return> to quit---
   0x0000000000401301 <+197>:   movq   $0x0,0x8(%rdx)
   0x0000000000401309 <+205>:   mov    $0x5,%ebp
   0x000000000040130e <+210>:   mov    0x8(%rbx),%rax
   0x0000000000401312 <+214>:   mov    (%rax),%eax
   0x0000000000401314 <+216>:   cmp    %eax,(%rbx)
   0x0000000000401316 <+218>:   jge    0x40131d <phase_6+225>
   0x0000000000401318 <+220>:   callq  0x401742 <explode_bomb>
   0x000000000040131d <+225>:   mov    0x8(%rbx),%rbx
   0x0000000000401321 <+229>:   sub    $0x1,%ebp
   0x0000000000401324 <+232>:   jne    0x40130e <phase_6+210>
   0x0000000000401326 <+234>:   mov    0x58(%rsp),%rax
   0x000000000040132b <+239>:   xor    %fs:0x28,%rax
   0x0000000000401334 <+248>:   je     0x40133b <phase_6+255>
   0x0000000000401336 <+250>:   callq  0x400b90 <__stack_chk_fail@plt>
   0x000000000040133b <+255>:   add    $0x68,%rsp
   0x000000000040133f <+259>:   pop    %rbx
   0x0000000000401340 <+260>:   pop    %rbp
   0x0000000000401341 <+261>:   pop    %r12
   0x0000000000401343 <+263>:   pop    %r13
   0x0000000000401345 <+265>:   retq  


(gdb) x/3x $ebx
0x6042f0 <node1>:       0xbf    0x01    0x00
(gdb) x/3x *($ebx+8)
0x604300 <node2>:       0x0c    0x01    0x00
(gdb) x/3x *(*($ebx+8)+8)
0x604310 <node3>:       0x3e    0x00    0x00
(gdb) x/3x *(*(*($ebx+8)+8)+8)
0x604320 <node4>:       0xc5    0x02    0x00
(gdb) x/3x *(*(*(*($ebx+8)+8)+8)+8)
0x604330 <node5>:       0xbd    0x02    0x00
(gdb) x/3x $edx
0x604340 <node6>:       0x83    0x03    0x00

1: 191
2: 12
3: 62
4: 197
5: 189
6: 131

largest to smallest:

4 1 5 6 3 2