Dump of assembler code for function phase_4:
   0x0000000000401152 <+0>:     sub    $0x18,%rsp
   0x0000000000401156 <+4>:     mov    %fs:0x28,%rax
   0x000000000040115f <+13>:    mov    %rax,0x8(%rsp)
   0x0000000000401164 <+18>:    xor    %eax,%eax
   0x0000000000401166 <+20>:    mov    %rsp,%rcx
   0x0000000000401169 <+23>:    lea    0x4(%rsp),%rdx
   0x000000000040116e <+28>:    mov    $0x4029fd,%esi
   0x0000000000401173 <+33>:    callq  0x400c40 <__isoc99_sscanf@plt>
   0x0000000000401178 <+38>:    cmp    $0x2,%eax
   0x000000000040117b <+41>:    jne    0x401188 <phase_4+54>
   0x000000000040117d <+43>:    mov    (%rsp),%eax
   0x0000000000401180 <+46>:    sub    $0x2,%eax
   0x0000000000401183 <+49>:    cmp    $0x2,%eax
   0x0000000000401186 <+52>:    jbe    0x40118d <phase_4+59>
   0x0000000000401188 <+54>:    callq  0x401742 <explode_bomb>
   0x000000000040118d <+59>:    mov    (%rsp),%esi
   0x0000000000401190 <+62>:    mov    $0x8,%edi
   0x0000000000401195 <+67>:    callq  0x401117 <func4>
   0x000000000040119a <+72>:    cmp    0x4(%rsp),%eax
   0x000000000040119e <+76>:    je     0x4011a5 <phase_4+83>
   0x00000000004011a0 <+78>:    callq  0x401742 <explode_bomb>
   0x00000000004011a5 <+83>:    mov    0x8(%rsp),%rax
   0x00000000004011aa <+88>:    xor    %fs:0x28,%rax
   0x00000000004011b3 <+97>:    je     0x4011ba <phase_4+104>
   0x00000000004011b5 <+99>:    callq  0x400b90 <__stack_chk_fail@plt>
   0x00000000004011ba <+104>:   add    $0x18,%rsp
   0x00000000004011be <+108>:   retq   
End of assembler dump.

Dump of assembler code for function func4:
=> 0x0000000000401117 <+0>:     test   %edi,%edi
   0x0000000000401119 <+2>:     jle    0x401146 <func4+47>
   0x000000000040111b <+4>:     mov    %esi,%eax
   0x000000000040111d <+6>:     cmp    $0x1,%edi
   0x0000000000401120 <+9>:     je     0x401150 <func4+57>
   0x0000000000401122 <+11>:    push   %r12
   0x0000000000401124 <+13>:    push   %rbp
   0x0000000000401125 <+14>:    push   %rbx
   0x0000000000401126 <+15>:    mov    %esi,%ebp
   0x0000000000401128 <+17>:    mov    %edi,%ebx
   0x000000000040112a <+19>:    lea    -0x1(%rdi),%edi
   0x000000000040112d <+22>:    callq  0x401117 <func4>
   0x0000000000401132 <+27>:    lea    0x0(%rbp,%rax,1),%r12d
   0x0000000000401137 <+32>:    lea    -0x2(%rbx),%edi
   0x000000000040113a <+35>:    mov    %ebp,%esi
   0x000000000040113c <+37>:    callq  0x401117 <func4>
   0x0000000000401141 <+42>:    add    %r12d,%eax
   0x0000000000401144 <+45>:    jmp    0x40114c <func4+53>
   0x0000000000401146 <+47>:    mov    $0x0,%eax
   0x000000000040114b <+52>:    retq   
   0x000000000040114c <+53>:    pop    %rbx
   0x000000000040114d <+54>:    pop    %rbp
   0x000000000040114e <+55>:    pop    %r12
   0x0000000000401150 <+57>:    repz retq 
End of assembler dump.